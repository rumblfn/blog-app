openapi: 3.0.0
info:
  title: Social Media API
  description: API для социальной медиа платформы
  version: 1.0.0

servers:
  - url: /api
    description: API prefix

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string

    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
        author:
          $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time

    Token:
      type: object
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            username:
              type: string

    Error:
      type: object
      properties:
        message:
          type: string

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: refreshToken

paths:
  /users/register:
    post:
      tags:
        - Auth
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Ошибка валидации или пользователь уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/login:
    post:
      tags:
        - Auth
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "400":
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/logout:
    post:
      tags:
        - Auth
      summary: Выход из системы
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Успешный выход
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/refresh:
    get:
      tags:
        - Auth
      summary: Обновление access token
      description: Использует refresh token из cookies для генерации нового access token
      responses:
        "200":
          description: Токены успешно обновлены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "401":
          description: Невалидный или просроченный refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /posts:
    get:
      tags:
        - Posts
      summary: Получить все посты
      description: Возвращает список всех постов с информацией об авторах
      responses:
        "200":
          description: Список постов успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

    post:
      tags:
        - Posts
      summary: Создать новый пост
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
              required:
                - message
      responses:
        "201":
          description: Пост успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          description: Отсутствует обязательное поле message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /posts/{id}:
    put:
      tags:
        - Posts
      summary: Обновить существующий пост
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        "200":
          description: Пост успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "401":
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Нет прав на редактирование поста
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Пост не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Posts
      summary: Удалить пост
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Пост успешно удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Нет прав на удаление поста
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Пост не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
